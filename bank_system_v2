import textwrap

def menu ():
    menu = """\n
    ||||||||||||||||||||||||||| MENU |||||||||||||||||||||||||||
    \n
    [d]\tDepositar
    [s]\tSacar
    [e]\tExtrato
    [nu]\tNovo usuário
    [nc]\tCriar conta
    [lc]\tListar contas
    [q]\tSair
    -->"""
    return input(textwrap.dedent(menu))
    
def depositar(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: \tR$ {valor}\n"
        print("Depósito realizado com sucesso.")

    else:
        print("Não foi possível depositar esse valor, favor repita o processo.")
    
    return saldo, extrato

def sacar(*, saldo, valor, extrato, limite, numero_saques):
  
    if numero_saques > 0:
        if valor <= 0:
            print("informe um valor válido")
        
        elif valor > saldo:
            print("Saldo insuficiente")

        elif valor > limite:
            print("O valor desejado é maior que o limite por saque.")
        
        else:
            print(f"Saque de {valor} efetuado com sucesso.")
            saldo -= valor
            numero_saques -= 1
            extrato += f"Saque: \t\tR$ {valor:.2f}\n"
    
    else:
        print("Limite de saques diários excedido")
        
    return saldo, extrato, numero_saques

def exibir_extrato(saldo, /, *,extrato):
    print("\n =============== EXTRATO =============== ")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo:\t\tR$ {saldo:.2f}")
    print("========================================== ")

def criar_usuario(usuarios):
    cpf = input("Informe seu CPF (somente números): ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n Já existe usuário com esse CPF")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input ("Informe o endereço (logradouro, nro - bairro - cidade/UF): ")

    usuarios.append({"nome" : nome, "data_nascimento" : data_nascimento, "cpf" : cpf, "endereco" : endereco}) 

    print("Usuário cadastrado com sucesso")

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None
    
def cria_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário:")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n Conta criada com sucesso!")
        return {"agencia": agencia, "numero_conta" : numero_conta, "usuario" : usuario}
    
    print("\n Usuário não encontrado, fluxo de criação de conta encerrado")

def listar_contas(contas):
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t\t {conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print("=" * 100)
        print(textwrap.dedent(linha))

def main():
    AGENCIA = "0001"
    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 3
    usuarios = []
    contas = []

    while True:
        opcao = menu()

        if opcao == "d":
            valor = float(input("Informe o valor do depósito: "))

            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == "s":
            valor = float(input("Informe o valor do saque: "))

            saldo, extrato, numero_saques = sacar(
                saldo = saldo,
                valor = valor,
                extrato = extrato,
                limite = limite,
                numero_saques = numero_saques,
                )
            
        elif opcao == "e":
            exibir_extrato(saldo, extrato = extrato)

        elif opcao == "nu":
            criar_usuario(usuarios)

        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = cria_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == "lc":
            listar_contas(contas)

main()
